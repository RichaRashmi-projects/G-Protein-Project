{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"1. Similarity","provenance":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"code","metadata":{"id":"bg0T3OR2P7d3","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":122},"outputId":"3abdc1f4-7b55-4733-be80-ab72cdd9093d","executionInfo":{"status":"ok","timestamp":1576578265254,"user_tz":-330,"elapsed":33436,"user":{"displayName":"Richa Rashmi 17310037","photoUrl":"","userId":"11797088183663823204"}}},"source":["#import required libraries\n","import pandas as pd\n","import Levenshtein\n","from google.colab import drive\n","drive.mount('/content/drive')"],"execution_count":9,"outputs":[{"output_type":"stream","text":["Go to this URL in a browser: https://accounts.google.com/o/oauth2/auth?client_id=947318989803-6bn6qk8qdgf4n4g3pfee6491hc0brc4i.apps.googleusercontent.com&redirect_uri=urn%3aietf%3awg%3aoauth%3a2.0%3aoob&response_type=code&scope=email%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdocs.test%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive%20https%3a%2f%2fwww.googleapis.com%2fauth%2fdrive.photos.readonly%20https%3a%2f%2fwww.googleapis.com%2fauth%2fpeopleapi.readonly\n","\n","Enter your authorization code:\n","··········\n","Mounted at /content/drive\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"id":"fkl1h5OHUZi6","colab_type":"text"},"source":["Funtion to calulate the percent similarity between the two sequences.\n"]},{"cell_type":"code","metadata":{"id":"8KnPxNwlQIwU","colab_type":"code","colab":{}},"source":["def similarity(seq1, seq2):\n","    \"\"\"  \n","    Funtion to check the percentahe similarity between the two sequences\n","    \"\"\"\n","    return Levenshtein.ratio(A, B) * 100"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"BCG_Ry5SVbc5","colab_type":"code","colab":{}},"source":["# give path  to the sheet containing no. of mismatches , spacing and path to all the input and output files\n","sheet_path= \"/content/drive/My Drive/Colab Notebooks/GProtein_Project/sheet.csv\"\n","data = pd.read_csv(sheet_path)"],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"NpaHXs3YVyXo","colab_type":"code","colab":{}},"source":["# Enter the name of the family for which you want to remove the similarity bias\n","family = input(\"Enter Protein Family: \")\n","print (family)\n"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"5mg2uWWEaora","colab_type":"text"},"source":["Remove the imilarity bias."]},{"cell_type":"code","metadata":{"id":"4r9FzVj_ZO3u","colab_type":"code","colab":{}},"source":["for x in range(27):\n","    protein_family = data.loc[x , \"Protein\"]\n","    print (protein_family)\n","    if (family==protein_family):\n","        print (protein_family)\n","        inpath= data.loc[x , \"in_path\"]\n","        outpath= data.loc[x , \"in_path_new\"]\n","        \n","        df1 = pd.read_excel(inpath)\n","        df2 = df1\n","\n","        for i in range((df1.shape[0]-1)):\n","            A=df1.loc[i , \"Sequence\"]\n","            B=df1.loc[(i+1) , \"Sequence\"]\n","            percent_similarity = similarity(A, B)\n","    \n","            if (percent_similarity >= 90):\n","                print (percent_similarity) \n","                df2 = df2.drop(df2[df2.Sequence == B].index)\n","        \n","      "],"execution_count":0,"outputs":[]},{"cell_type":"code","metadata":{"id":"KBi1ayEYa1df","colab_type":"code","colab":{}},"source":["  df2.to_excel(outpath, index = False)"],"execution_count":0,"outputs":[]}]}